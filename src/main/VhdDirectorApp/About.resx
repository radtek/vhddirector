<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/7gAOQWRvYmUAZAAAAAAB/+EAFkV4aWYAAE1NACoAAAAIAAAAAAAA
        /+wAEUR1Y2t5AAEABAAAADwAAP/hA4BodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvADw/eHBhY2tl
        dCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+DQo8eDp4bXBtZXRhIHht
        bG5zOng9ImFkb2JlOm5zOm1ldGEvIiB4OnhtcHRrPSJBZG9iZSBYTVAgQ29yZSA1LjAtYzA2MCA2MS4x
        MzQ3NzcsIDIwMTAvMDIvMTItMTc6MzI6MDAgICAgICAgICI+DQoJPHJkZjpSREYgeG1sbnM6cmRmPSJo
        dHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4NCgkJPHJkZjpEZXNjcmlw
        dGlvbiByZGY6YWJvdXQ9IiIgeG1sbnM6eG1wTU09Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9t
        bS8iIHhtbG5zOnN0UmVmPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvc1R5cGUvUmVzb3VyY2VS
        ZWYjIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iIHhtcE1NOk9yaWdpbmFs
        RG9jdW1lbnRJRD0ieG1wLmRpZDpGNDNFNEJEMTdBMjE2ODExOERCQkQzOURDOThBNDhDNyIgeG1wTU06
        RG9jdW1lbnRJRD0ieG1wLmRpZDpCNTBENzBCNzI0QUYxMUUxQTVBNkVBRUE3RUE0NDQ5RiIgeG1wTU06
        SW5zdGFuY2VJRD0ieG1wLmlpZDpCNTBENzBCNjI0QUYxMUUxQTVBNkVBRUE3RUE0NDQ5RiIgeG1wOkNy
        ZWF0b3JUb29sPSJBZG9iZSBQaG90b3Nob3AgQ1M1IE1hY2ludG9zaCI+DQoJCQk8eG1wTU06RGVyaXZl
        ZEZyb20gc3RSZWY6aW5zdGFuY2VJRD0ieG1wLmlpZDpGNDNFNEJEMTdBMjE2ODExOERCQkQzOURDOThB
        NDhDNyIgc3RSZWY6ZG9jdW1lbnRJRD0ieG1wLmRpZDpGNDNFNEJEMTdBMjE2ODExOERCQkQzOURDOThB
        NDhDNyIvPg0KCQk8L3JkZjpEZXNjcmlwdGlvbj4NCgk8L3JkZjpSREY+DQo8L3g6eG1wbWV0YT4NCjw/
        eHBhY2tldCBlbmQ9J3cnPz7/2wBDAAYEBAQFBAYFBQYJBgUGCQsIBgYICwwKCgsKCgwQDAwMDAwMEAwO
        DxAPDgwTExQUExMcGxsbHB8fHx8fHx8fHx//2wBDAQcHBw0MDRgQEBgaFREVGh8fHx8fHx8fHx8fHx8f
        Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx//wAARCAIpArwDAREAAhEBAxEB/8QAHAAB
        AQACAwEBAAAAAAAAAAAAAAEFBgMEBwII/8QAOhABAAAFAQcCBAMGBgMBAAAAAAERAgMEBRLSE1OTFQYh
        MUFRYQdxIhSBkaEyQpKxwdFSciPhYoIk/8QAGgEBAQEBAQEBAAAAAAAAAAAAAAEFBAMCBv/EACoRAQAD
        AAECBQMEAwEAAAAAAAABEQIDEgUhMVEEFWGhIkFxUhSBkbHh/9oADAMBAAIRAxEAPwD9UgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4c
        zNxcOxG/k3IW7cPjH4x+UIfF94xOpqIfG+TOIvU1DD1eb+PU+9+r+yLpj2HN6f8AHLPcOH1+0uOrz7xm
        n3yKof8AxUvx3N/H7wk9y4P5faXzH7h+LQ98mr+yr/Rfjef+P3h8/KcH8vtLN6dqeDqONDIw71N61V/V
        T8/lFycnFrE1qKl2cXLnkz1Zm4dl8PRNuAKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADSvuHfqpuYluf5NmqrZ+s4Qa3bY8Jlj9014xDSqM69j1V
        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
        ONbopqppvU+0YQjKf8Xl3DfVjEzFTL27bjp3uIm4j9Xrei6PRi0Qrr9bkfjFlU2GYmUPib6QmBMCYEwJ
        gTAmBMCYEwJgTAmBMCYEwJgTAmBMCYEwJgTAmBMCYEwJoEwJgTAmBMCYEwJgTAmBMCYEwJgTUJgTAmBM
        CYEwJgTAmBMCYEwJgTCyaBMCahMCYEwJgTAmBMCYEwJgTAnBAmoTAmBMCYEwJg6Gs6Jpms4kcXULMLtq
        c6Y+1VMfnTGHs++Pk1ibzLz5eLPJFai2sR+0ni0/58n8OJDddP8Af5HJ8bxfVI/aLxWP9eT1Kd0/v8n0
        PjeL6viP2d8Tj715PUhur8hy/RPjOH6/7bHoPi2i6FYjZ0+xsbXrXcqjtV1S+cYuXk5dbm9S7OLhzxxW
        YqGXm+HoTBju/aXzauld3VpLO/aXzauld3Qs79pfNq6VzdKLTv2l82rpXd0ote/aXzaulc3Qs79pfNq6
        V3dCzv2l82rpXd0LO/aXzauld3Qs79pfNq6V3dKLO/aXzauld3Qs79pfNq6dzdKLO/aXzaulc3Qs79pf
        Nq6VzdCzv2l82rpXd0LO/aXzauld3Si079pfNq6V3dC179pfNq6dzdKLTv2l82rpXd0os79pfNq6V3dC
        zv2l82rpXd0os79pfNq6V3dKLO/aXzauld3Qte/aXzauld3QtO/6Xzauld3Sizv2l82rpXd0os79pfNq
        6V3dKLXv2l82rpXd0os79pfNq6V3dCzv2l82rpXd0otO/wCl82rpXd0ote/aXzaulc3QtO/aXzauld3S
        izv2l82rpXd0os79pfNq6V3dKLXv2l82rp3N0LO/aXzaunc3Qs79pfNq6V3dKLO/aXzaulc3QtO/aXza
        uld3Sizv+l82rpXd0oO/aXzauld3Qs79pfNq6VzdKLO/aXzauld3Si179pfNq6V3dC079pfNq6V3dA79
        pfNq6V3dCzv2l82rpXd0os79pfNq6d3dKLO/aXzaund3QO/aXzaund3RLO/aXzauld3Sls79pfNq6d3d
        Czv2l82rpXd0LO/aXzaund3QO/aXzauld3Sizv2l82rp3d0oO/aXzaund3Qte/aXzKuld3Qs79pfNq6d
        zdC079pfNq6dzdKLO/aXzauld3QO/wCl82rpXd0os79pfNq6V3dBe/aXzaunc3Qs79pnNq6V3dA79pnN
        q6d3dA79pfNq6dzdC079pfNq6d3dKLO/aXzaund3QO/aXzauld3Sizv2l82rpXd0oO/aXzaunc3Sg79p
        fNq6dzdKF79pnNq6V3dC079pfNq6d3dKLO/aZzaund3Qs79pfNq6d3dCzv2l82rp3d0oO/aXzaund3Qs
        79pfNq6d3dCzv2mc2rp3d0LO/aXzaund3Sg79pfNq6d3dKLO/aZzauld3Sizv2l82rp3d0Dv2mc2rp3I
        f40gd903mVf2V/6FB33TeZV/ZX/oUMLwYvqnxZwSlODALOCUhwf3FFnBgFnB9SiyFkLOD9PUoOAUWcAU
        4KJEnBVTglFnBA4AlkLKFnA9FU4JSHARbOB/4WizgIHA/iocADgFJZwPoFnBCzgAcEpTg+/olFnB/YtF
        kbPyEOBADginB9Cks4PqBwQOB8hTgeqUhwPgtKcCIlnAhMWzgfALOD8xLI2fX6i2cH6FBwfp6lFnAEg4
        MCghZh8ig4MRTgfvA4H0Qs4HyWizgCWcALI2Cg4AHA9JlFkLP0KU4IkycEpbOCUWcGHyKJIWI/vA4PqU
        HBKLIWQOB9As4JRBwSg4AhwEoshYFOBGSlnBCzgCHAhMU4BSQcGHuUpwAs4IkScEU4MSg4AELEJha8Ap
        LOAUW5lQFJgsJBKev7QUEEBQRRUBfiCfGYKBME/wABZhACfMFBAAAIgACAoICgAAAHr8APxAAAACVEQU
        j7AAATAA+IEfcD5BK/ED8BEFIABKz9fkCTEWYqBAAB+z8QPiAIR/iKAAASA+IAH+QgKswSIAQTAA9wAA
        AURBQCQKACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAKAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAoAAAAAAAAAAAAAAAAAAAAAAAAAICgA
        AAAAAAAAgKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAICgAAAAAAAAAAAAAAAAAAAAAAAgKAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoIAAICgAgKAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAoIAAAgKAAAAACCqIAAAA
        gKAAAAAAAAAAAAKCAAAAAAAAICgAAAAAAAAAAAAAAAAAAAAAgKAAAAAAAAAAAAAAAAAAACAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKC
        AoAIACggKAAAAACAoAICggKAAAAAAAAAAACAoAAIACgAAAAAAAAgKAAAAAAAAAAACAoAAAAICgAAAAAA
        AgKAAAACAoIACgACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgKACAoAAAgKgKIgoCggKICgAIACgAgAKIgqggKAICgICggKA
        CAogAKAAAgAAKCAoAAICgACIKoAICgACAoCAAoAAICgAgAKACAoiCgKIgoACggAgAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoICggAKAA
        AAAAACAoAAAAAAAICgAAAAAAAAAAAgKAAAACAoAAAAAAAAAAAAICgAAAAAACAAoCAoAAAAAAAAAAAAAI
        ACgAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAgKAAAAACAoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAAICgAAAAgKAAAAAAACAoAAICggKAAAAAAAAACAoAICgAAAAAA
        AAgKAAAAAACAoAAAAAAAAAAAAAAAAAAAICgAAgKCAAAAACgggKAAoIIoqAAAAAAAAAAoIACgAAggKAAA
        CAoAAAAAACggKCAAAAAoIAAAACgAgAiioAAAAAICgAAAAAAAAAAAAiigIACiAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAKACAoIACg
        gKCAoAAIACggKCAAoAAAAAICgAAgKAACAoAAICgAAgKCAAoAAAAAAAAIACggKAACAAoAAICggKAACAAA
        oICggKCAAAoIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAACCAAAAAAAAKCAAAKCAAAAAKCAAAAoIAAAAAAAAAAACqIgAAAKCAAAAAKCAAAo
        IAAAAAAAAAAAAAoICggAAAAKCAAoIAoIAAAAAAoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIIAAACggKKCIKACKAC
        AoICgAgKCAoAICgAAAAgqiICgAAgqiAoIAAAgKCAooIAgKKAgigAgqiAoIAAAAAgAKKggCgAAAAgKCAA
        AAoICggAKCAoIKAAAAICgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAg
        KAAAAAAAAAAAAAAAAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgKACAoICgAAAAAAAAgAAKAAACAoAAAAAICggKACAAoIAAACgg
        AAAKAAAAAAAACAoAICggAKCAAoIACggAAAAAKCAoICgAAAAAAAAiggAKAAACAoIAAAAAAAAAAAAAAAAC
        ggAAAAAAAAAKAgiiggAKAACAAoICggAAKCAoIAAAACggKCAAAAoIACggKCAAAAAAAAoIACgCCAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAoIAACggAKACAAAAoIAAAAAACggAAAAAKCAoIAACggAKCAAAAoIACggAKCAo
        AAAAICggAAKACAAAAAAAAAAAAAAAAAAAAoAggAAAAAAAAAAAAAAAKCAAAAoICggAAAKCAAoAICggKCAA
        AoIAAAAACggAKCAAAAAoIAAAACggAKCAoICgAAgAKCAAAAoICggKCAoIAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACggAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAigAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAIAAAAAAAAAAAAAAAAAAACggAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgCgAAAgKAACAAoIAACggAKCAoAAICgAgKAACAAAAoICg
        AgKCAoIAAACggAAAKAACAoAAAIAAAACgAAAgKCAAAAoICggKCAAAAoICgAgKAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAICiAqCAqiICg
        CoCgCIKoICgCICggKAAKAACICioAICgAKAIgKAKCIKoIACiAIKoiCgAKAIgAoCgCAAAoIgKKACAoICgA
        iAAoIAAKoIAIAoqCKKACAqACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAICgAAAAAAAAAAAAAAAAAAAAAAAAAgAKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAACggAKCAA
        AAAAAoAIAAAACggAAAAAAAAAAAAAAAAAAAKCAoIAAAAAAAAAAAAAAAACggAAAKCAAAAAAAAAAoIACgAg
        AAAAAAAAgAKAAAAAAAAACAoICggAKAACAoICggKACAAoAAAAAAAAAAICggKAACAoAAAAAAAAAAICggAK
        ACAAoICgAAAAAAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD/2Q==
</value>
  </data>
</root>